name: Windows

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/windows.yml'
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: "${{ github.event.repository.name }}\\projects\\VS2022\\build\\${{ github.event.repository.name }}\\bin\\x64\\Release"
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_win_x64

    steps:
    - name: Checkout this repo
      uses: actions/checkout@master
      with:
        path: ${{ env.PROJECT_NAME }}
        
    # NOTE: Visual Studio project build configuration already defines all required directories where project is generated:
    # $(SolutionDir)\build\$(ProjectName)\bin\$(Platform)\$(Configuration)\
    - name: Setup Release Paths
      run: |
        echo "PROJECT_RELEASE_PATH=${{ env.PROJECT_NAME }}_v${{ github.event.release.tag_name }}_win_x64" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Setup Msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: mingw-w64-x86_64-gcc sed vim
    
    - name: Build Product + Generate Artifacts
      run: |
        cd ${{ env.PROJECT_NAME }}/src
        make PLATFORM=PLATFORM_DESKTOP BUILD_MODE=RELEASE PROJECT_CUSTOM_FLAGS=${{ env.PROJECT_CUSTOM_FLAGS }} PROJECT_BUILD_PATH=.
        cd ..
        ls ${{ env.PROJECT_BUILD_PATH }}
        cp ${{ env.PROJECT_BUILD_PATH }}/${{ env.PROJECT_NAME }} ${{ env.PROJECT_RELEASE_PATH }}
        cp ${{ env.PROJECT_NAME }}/README.md ${{ env.PROJECT_RELEASE_PATH }}
        cp ${{ env.PROJECT_NAME }}/LICENSE ${{ env.PROJECT_RELEASE_PATH }}
        ls ${{ env.PROJECT_RELEASE_PATH }}
        tar -czvf ./${{ env.PROJECT_RELEASE_PATH }}.tar.gz ./${{ env.PROJECT_RELEASE_PATH }}
      shell: cmd

    # Issue: Double zip: https://github.com/actions/upload-artifact/issues/39
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PROJECT_RELEASE_PATH }}.tar.gz
        path: ./${{ env.PROJECT_RELEASE_PATH }}.tar.gz
        
    # Alternative: https://github.com/marketplace/actions/gh-release
    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: ${{ env.PROJECT_RELEASE_PATH }}.zip
        asset_path: ./${{ env.PROJECT_RELEASE_PATH }}.zip
        asset_content_type: application/zip
      if: github.event_name == 'release' && github.event.action == 'published'
