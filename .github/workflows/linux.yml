name: Linux

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/linux.yml'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-20.04
    
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: ${{ github.event.repository.name }}/src
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_linux_x64
      PROJECT_SOURCES: "raylib_game.c"
      PROJECT_CUSTOM_FLAGS: ""
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@master
      with:
        path: ${{ env.PROJECT_NAME }}
      
    - name: Checkout raylib repo
      uses: actions/checkout@v3
      with:
        repository: raysan5/raylib
        path: raylib
        
    - name: Setup Release Paths
      run: |
        echo "PROJECT_RELEASE_PATH=${{ env.PROJECT_NAME }}_v${{ github.event.release.tag_name }}_linux_x64" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'
    
    - name: Setup Environment
      run: | 
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev
        mkdir ${{ env.PROJECT_RELEASE_PATH }}
        ls
      shell: bash
        
    - name: Build raylib Library
      run: |
        cd raylib/src
        gcc --version
        make PLATFORM=PLATFORM_DESKTOP BUILD_MODE=RELEASE RAYLIB_LIBTYPE=STATIC RAYLIB_PROJECT_RELEASE_PATH=. -B

    - name: Build Product
      run: |
        cd ${{ env.PROJECT_NAME }}/src
        make PLATFORM=PLATFORM_DESKTOP BUILD_MODE=RELEASE PROJECT_SOURCE_FILES=${{ env.PROJECT_SOURCES }} PROJECT_CUSTOM_FLAGS=${{ env.PROJECT_CUSTOM_FLAGS }} PROJECT_BUILD_PATH=. RAYLIB_PATH=../../raylib

    - name: Generate Artifacts
      run: |
        ls ${{ env.PROJECT_BUILD_PATH }}
        cp ${{ env.PROJECT_BUILD_PATH }}/${{ env.PROJECT_NAME }} ${{ env.PROJECT_RELEASE_PATH }}
        cp ${{ env.PROJECT_NAME }}/README.md ${{ env.PROJECT_RELEASE_PATH }}
        cp ${{ env.PROJECT_NAME }}/LICENSE ${{ env.PROJECT_RELEASE_PATH }}
        ls ${{ env.PROJECT_RELEASE_PATH }}
        7z a ./${{ env.PROJECT_RELEASE_PATH }}.zip ./${{ env.PROJECT_RELEASE_PATH }}

    # Issue: Double zip: https://github.com/actions/upload-artifact/issues/39
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PROJECT_RELEASE_PATH }}.zip
        path: ./${{ env.PROJECT_RELEASE_PATH }}.zip
        
    # Alternative: https://github.com/marketplace/actions/gh-release
    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: ${{ env.PROJECT_RELEASE_PATH }}.zip
        asset_path: ./${{ env.PROJECT_RELEASE_PATH }}.zip
        asset_content_type: application/zip
      if: github.event_name == 'release' && github.event.action == 'published'
